keep_md: true
---
## Loading and preprocessing the data
1. Setup the environment
```{r}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
```
1. Check if the data file exists.
```{r}
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
```{r}
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
1. Setup the environment
```{r}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
```
2. Check if the data file exists.
```{r}
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
#### 2. Check if the data file exists.
2. Check if the data file exists.
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
1. Setup the environment
```{r message=FALSE, echo=TRUE}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
```
2. Check if the data file exists.
```{r message=FALSE, echo=TRUE}
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
?message
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
```{r message=FALSE, echo=TRUE}
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
1. Setup the environment
```{r message=FALSE, echo=TRUE}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
# Check if the file exists
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
1. Setup the environment
```{r message=FALSE, echo=TRUE}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
# Check if the file exists
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
1 Setup the environment
```{r message=FALSE, echo=TRUE}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
# Check if the file exists
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ls('activities')
exists('activities')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rm(activity_data)
exists('sourceFile')
source('~/.active-rstudio-document', echo=TRUE)
View(activity_data)
activity_data <- read.csv(sourceFile, colClasses = c('numeric', 'date', 'numeric'))
activity_data <- read.csv(sourceFile, colClasses = c('numeric', 'character', 'numeric'))
View(activity_data)
View(activity_data)
activity_date$date <- as.Date(activity_data$date, '%Y-%m-%d')
activity_date$date <- as.Date(actvity_data$date, '%Y-%m-%d')
activity_date$date <- as.Date(activity_data$date, '%Y-%m-%d')
activity_data$date <- as.Date(activity_data$date, '%Y-%m-%d')
View(activity_data)
source('~/.active-rstudio-document', echo=TRUE)
activity_data$date <- as.Date(activity_data$date, '%Y-%m-%d')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(activity_data)
?aggregate
steps_per_day <- with(activity_data, aggregate(steps, c(date = date), sum))
source('~/.active-rstudio-document', echo=TRUE)
View(steps_per_day)
steps_per_day <- with(activity_data, aggregate(steps, list(date = date), sum, na.action = na.omit))
# Coerce the proper data type for the date
activity_data$date <- as.Date(activity_data$date, '%Y-%m-%d')
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
# Check if the file exists
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
# Have we already loaded the data?
if(!exists('activity_data')) {
# We haven't, so read the data in
activity_data <- read.csv(sourceFile, colClasses = c('numeric', 'character', 'numeric'))
}
View(steps_per_day)
steps_per_day <- with(activity_data, aggregate(steps, list(date = date), sum, na.action = na.exclude(NA)))
View(steps_per_day)
steps_per_day <- with(activity_data, aggregate(steps, list(date = date), sum, na.rm = TRUE)
)
View(steps_per_day)
steps_per_day <- with(activity_data, aggregate(steps, list(date = date), sum))
View(steps_per_day)
steps_per_day <- with(activity_data, aggregate(steps, list(date = date), sum, na.rm = TRUE))
View(steps_per_day)
steps_per_day <- with(activity_data, aggregate(steps ~ date, sum, na.rm = TRUE))
steps_per_day <- aggregate(steps ~ date, data = activity_data, sum, na.rm = TRUE)
View(steps_per_day)
steps_per_day <- aggregate(steps, by = date, data = activity_data, sum, na.rm = TRUE)
View(steps_per_day)
with(steps_per_day, hist(steps, date))
with(steps_per_day, hist(steps))
activity <- activity_data
hist(tapply(activity$steps,activity$date,sum), main = paste("Histogram of Total Number of Steps Taken per Day"), xlab="Sum of Steps")
?hist
mean(steps_per_day$steps)
formatC(mean(steps_per_day$steps))
prettyNum(mean(steps_per_day$steps))
View(activity)
with(activity_data, plot(type='l', y = date ~ interval, x = steps))
with(activity_data, date ~ inverval)
source('~/.active-rstudio-document', echo=TRUE)
View(steps_per_day)
View(steps_per_day)
?hist
source('~/.active-rstudio-document', echo=TRUE)
totsteps <- tapply(activity$steps, activity$date,sum)
hist(totsteps,col="blue",xlab="Total Steps per Day",
ylab="Frequency", main="Histogram of Total Steps taken per day")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?plot
View(intervals)
with(
intervals,
plot(
interval,
steps,
type = 'l'
)
)
?prettyNum
interval.max_steps <- max(intervals$steps)
interval.max_steps
max_steps <- max(intervals$steps)
intervals[intervals$steps == max_steps]
intervals[intervals$steps == max_steps, ]
max_interval <- intervals[intervals$steps == max_steps, ]$interval
View(activity_data)
na_count <- sum(is.na(activity_data))
na_count
View(activity_data)
needing_updates <- activity_data[is.na(activity_data$steps), ]
View(needing_updates)
View(intervals)
View(steps_per_day)
View(needing_updates)
View(needing_updates)
View(intervals)
?merge
merge(intervals, needing_updates)
View(merge(needing_updates, intervals))
View(needing_updates)
View(merge(needing_updates, intervals, by = intersect(steps, steps)))
View(merge(needing_updates, intervals, by = intersect(needing_updates$steps, intervals$steps)))
View(merge(needing_updates, intervals, by = intersect(names(needing_updates), names(intervals))))
?by.x
?cbind
View(merge(needing_updates, intervals, by = "steps"))
View(merge(needing_updates, intervals, by = "interval"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(updated_activities)
?union
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?merge
View(updated_activities)
View(union(activity_data[!is.na(activity_data$steps), ], updated_activities))
View(updated_activities)
?union
?rbind
View(merge(updated_activities, activity_data, by = c('interval', 'date')))
?na.indices
??na.indices
activity_data$steps[na.indices]
?match
source('~/.active-rstudio-document', echo=TRUE)
View(foo)
View(activity_data)
View(activity_data)
View(foo)
source('~/.active-rstudio-document', echo=TRUE)
View(activity_data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(updated_activities)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?formatC
diff.mean <- (steps.mean - updated.mean) / steps.mean
diff.median <- (steps.median - updated.median) / steps.median
sprintf('.2f%%', diff.mean)
sprintf('%.2f%%', diff.mean)
sprintf('%.2f%%', diff.median)
sprintf('%.3f%%', diff.median)
sprintf('%.5f%%', diff.median)
sprintf('%.3f%%', diff.median)
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
# Check if the file exists
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
# Have we already loaded the data?
if(!exists('activity_data')) {
# We haven't, so read the data in
activity_data <- read.csv(sourceFile, colClasses = c('numeric', 'character', 'numeric'))
}
sourceZipFile <- 'activity.zip'
sourceFile <- 'activity.csv'
# Check if the file exists
if(!file.exists(sourceFile)) {
# It doesn't exist, so unzip the file
unzip(sourceZipFile)
}
# Have we already loaded the data?
if(!exists('activity_data')) {
# We haven't, so read the data in
activity_data <- read.csv(sourceFile, colClasses = c('numeric', 'character', 'numeric'))
}
# Aggregate the number of steps by day ignoring any "NA" values
steps_per_day <- aggregate(
steps ~ date,
data = activity_data,
sum,
na.rm = TRUE
)
# Draw the graph
with(
steps_per_day,
hist(
steps,
main = 'Total Number of Steps Per Day',
xlab = 'Step Count Per Day',
ylab = 'Number of Days'
)
)
steps.mean <- mean(steps_per_day$steps, na.rm = TRUE)
steps.median <- median(steps_per_day$steps, na.rm = TRUE)
# Calculate the steps per interval
intervals <- aggregate(
steps ~ interval,
data = activity_data,
mean,
na.rm = TRUE
)
# Graph the results
with(
intervals,
plot(
interval,
steps,
type = 'l',
xlab = '5-minute Interval',
ylab = 'Average Number of Steps',
main = ''
)
)
# Calculate the maximum number of steps
info.max_steps <- max(intervals$steps)
# Find the interval that matched this maximum number of steps
info.max_interval <- intervals[intervals$steps == info.max_steps, ]$interval
# Grab all of the records that need updating
needing_updates <- activity_data[is.na(activity_data$steps), ]
# Match on interval and replace "steps" with the average
updated_activities <- merge(needing_updates, intervals, by = 'interval')
View(activity_data)
?write.csv
write.csv(activity_data, 'activity-old.csv')
write.csv(updated_activities, 'updated-activities-old.csv')
getwd()
# Attach any of the updated steps in
activity_data[is.na(activity_data$steps), ]$steps <- updated_activities[
match(activity_data$date, updated_activities$date)
&& match(activity_data$interval, updated_activities$interval)
]$steps.y
write.csv(activity_data, 'activity-new.csv')
View(intervals)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(updated_activities)
View(updated_activities)
View(needing_updates)
View(merge(activity_data, intervals, by = 'interval'))
View(activity_data)
activity_data <- merge(activity_data, intervals, by = 'interval')
View(activity_data)
activity_data[is.na(activity_data$steps), ]$steps <- activity_data[is.na(activity_data$steps), ]$steps.y
activity_data[is.na(activity_data$steps), ]$steps <- activity_data[is.na(activity_data$steps), ]$steps.y
View(activity_data)
activity_data[is.na(activity_data$steps.x), ]$steps.x <- activity_data[is.na(activity_data$steps), ]$steps.y
activity_data[is.na(activity_data$steps.x), ]$steps.x <- activity_data[is.na(activity_data$steps.x), ]$steps.y
View(activity_data)
?merge
source('~/.active-rstudio-document', echo=TRUE)
View(activity_data)
foo <- activity_data
foo$day_type <- weekday(foo$date)
foo$day_type <- weekdays(foo$date)
View(activity_data)
View(foo)
?weekdays
?which
?if
;
?case
foo$day_type <- if(weekdays(foo$date) %in% c('Saturday', 'Sunday') 'weekend' else 'weekday';
foo$day_type <- if(weekdays(foo$date) %in% c('Saturday', 'Sunday') 'weekend' else 'weekday'
foo$day_type <- if(weekdays(foo$date) %in% c('Saturday', 'Sunday') {'weekend'} else {'weekday'}
?ifelse
foo$day_type <- ifelse(weekdays(foo$date) %in% c('Saturday', 'Sunday'), 'weekend', 'weekday')
foo$day_type <- as.factor(ifelse(weekdays(foo$date) %in% c('Saturday', 'Sunday'), 'weekend', 'weekday'))
View(foo)
day_type <- with(
activity_data,
aggregate(
steps,
list(interval = interval, day_type = day_type),
mean
)
)
View(activity_data)
activity_data$day_type <- as.factor(
ifelse(
weekdays(foo$date) %in% c('Saturday', 'Sunday'),
'weekend',
'weekday'
)
)
View(activity_data)
activity_data$day_type <- as.factor(
ifelse(
weekdays(foo$date) %in% c('Saturday', 'Sunday'),
'weekend',
'weekday'
)
)
day_type <- with(
activity_data,
aggregate(
steps,
list(interval = interval, day_type = day_type),
mean
)
)
View(day_type)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(daily_activity)
qplot(daily_activity, aes(interval, x))
+ facet_grid(day_type ~ .)
qplot(daily_activity, aes(interval, x))
qplot(daily_activity, aes(interval, x))
+ facet_grid(daily_activity$day_type ~ .)
qplot(daily_activity, aes(daily_activity$interval, daily_activity$x))
+ facet_grid(daily_activity$day_type ~ .)
ggplot(daily_activity, aes(daily_activity$interval, daily_activity$x))
+ facet_grid(daily_activity$day_type ~ .)
ggplot(daily_activity, aes(interval, x))
+ geom_line()
+ facet_grid(day_type ~ .)
View(daily_activity)
ggplot(daily_activity, aes(interval, x))
+ geom_line()
ggplot(daily_activity, aes(interval, x))
+ geom_line()
+ facet_wrap(~day_type, ncol = 1)
View(daily_activity)
str(daily_activity)
source('~/.active-rstudio-document', echo=TRUE)
View(daily_activity)
ggplot(daily_activity, aes(interval, x))
ggplot(daily_activity, aes(interval, x)) + geom_line()
ggplot(daily_activity, aes(interval, x)) + geom_line() + facet_wrap(~day_type, ncol = 1)
source('~/.active-rstudio-document', echo=TRUE)
?xyplot
??xyplot
xyplot(steps ~ day_type, data = daily_activity)
xyplot(x ~ day_type, data = daily_activity)
library(lattice)
xyplot(x ~ day_type, data = daily_activity)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
xyplot(
x = interval | day_type,
data = daily_activity,
type = 'l',
layout = c(1, 2)
)
xyplot(
x = x | day_type,
data = daily_activity,
type = 'l',
layout = c(1, 2)
)
xyplot(
x = interval ~ day_type,
data = daily_activity,
type = 'l',
layout = c(1, 2)
)
xyplot(
x ~ interval | day_type,
data = daily_activity,
type = 'l',
layout = c(1, 2)
)
View(daily_activity)
write.csv('daily.csv', daily_activity)
write.csv(daily_activity, 'daily.csv')
getwd()
